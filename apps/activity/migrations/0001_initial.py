# Generated by Django 4.0.6 on 2022-09-15 08:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(validators=[django.core.validators.MinLengthValidator(20)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commentable_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MyAnimeList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(choices=[(1, 'Awful'), (2, 'Pretty Bad'), (3, 'So So'), (4, 'Good'), (5, 'Masterpiece')], default=0, verbose_name='Item score in list')),
                ('note', models.TextField(max_length=300, verbose_name='My note about item')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Watching', 'W'), ('Plan to watch', 'Ptw'), ('Completed', 'C'), ('Dropped', 'D')], max_length=15)),
                ('num_episodes_watched', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Number of watched episodes')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MyMangaList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(choices=[(1, 'Awful'), (2, 'Pretty Bad'), (3, 'So So'), (4, 'Good'), (5, 'Masterpiece')], default=0, verbose_name='Item score in list')),
                ('note', models.TextField(max_length=300, verbose_name='My note about item')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Reading', 'R'), ('Plan to read', 'Ptr'), ('Completed', 'C'), ('Dropped', 'D')], max_length=15)),
                ('num_chapters_read', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(7774)], verbose_name='Number of readed chapters')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(validators=[django.core.validators.MinLengthValidator(200)])),
                ('santiment', models.CharField(choices=[('Positive', 'Positive'), ('Neutral', 'Neutral'), ('Negative', 'Negative')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='AnimeReview',
            fields=[
                ('review_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activity.review')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('activity.review',),
        ),
        migrations.CreateModel(
            name='MangaReview',
            fields=[
                ('review_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activity.review')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('activity.review',),
        ),
    ]
